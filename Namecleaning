### Initialize
rm(list=ls())
options(stringsAsFactors=F)
setwd("~/CSUEB Materials/FDA Research")

### Read file 

raw <- as.data.frame(read.csv("Pestisides91-05.csv", header=T))
rawold <- raw[ 1:(match(x = "2003", table = raw$year)-1),]
rawnew <- raw[ match(x = "2003", table = raw$year):length(raw$year),]


### View Food Names

#early half
length(table(rawold$Food.No.))  # 289
length(table(rawold$Food.Name)) # 298

#later half
length(table(rawnew$Food.Name)) # 295
length(table(rawnew$Food.No.))  # 286

################################## Check degenerate name variables (2/2/16) ##########################


numberofnames <- function(x){
  names <-ifelse(length(table(rawnew$Food.Name[rawnew$Food.No.== x])) >= 2, yes = T ,no = F  )
  return(names)
}


numofnames <- sapply(X = c(1:max(rawnew$Food.No.)), FUN = numberofnames )
table(numofnames) #FALSE: 719   TRUE: 12
foodno <- c(which(numofnames, arr.ind = T)) # Index of >= 2 names per Food.No

# extract names 

tableofnames <- function(x){
  nametables <- data.frame(table(rawnew$Food.Name[rawnew$Food.No.== x]))
  return(nametables)
}

duplicatenames <- lapply(foodno, FUN = tableofnames ) #final object, output saved in txt file

### Food Names Cleanup

for(i in 1:max(rawnew$Food.No.)){
  if (!(length(table(rawnew$Food.Name[rawnew$Food.No.== i])) == 0) )
    rawnew$Food.Name[rawnew$Food.No.== i] <- rawnew$Food.Name[rawnew$Food.No.== i][1]
  
}

x <- (1)

for(n in 1:max(rawnew$Food.No.)){
  x <- append(x, length(table(rawnew$Food.No.[rawnew$Food.Name == rawnew$Food.Name[n]])))
}
table(x)


